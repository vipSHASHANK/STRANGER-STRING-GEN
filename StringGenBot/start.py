from pyrogram import Client, filters
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton, Message, CallbackQuery
from config import *

START_TXT = """‚ú¶ ¬ª  ú·¥á è  {msg.from_user.mention}  ‚ú§,
‚ú¶ ¬ª …™ ·¥Ä·¥ç {me2},

‚ú¶ ¬ª A…¥ ·¥è·¥ò·¥á…¥ s·¥è·¥ú Ä·¥Ñ·¥á s·¥õ Ä…™…¥…¢ s·¥áss…™·¥è…¥ …¢·¥á…¥·¥á Ä·¥Ä·¥õ·¥è Ä  ô·¥è·¥õ, ·¥° Ä…™·¥õ·¥õ·¥á…¥ …™…¥ ·¥© è·¥õ ú·¥è…¥ ·¥°…™·¥õ ú ·¥õ ú·¥á  ú·¥á ü·¥© ·¥è“ì ·¥© è Ä·¥è…¢ Ä·¥Ä·¥ç.

‚ú¶ ¬ª ·¥ò ü·¥á·¥ÄÍú±·¥á ·¥Ñ ú·¥è·¥èÍú±·¥á ·¥õ ú·¥á ·¥ò è·¥õ ú·¥è…¥  ü…™ ô Ä·¥Ä Ä è  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è …¢·¥á…¥·¥á Ä·¥Ä·¥õ·¥á Íú±·¥õ Ä…™…¥…¢ Íú±·¥áÍú±Íú±…™·¥è…¥ Íú∞·¥è Ä.

‚ú¶ ¬ª …™“ì  è·¥è·¥ú …¥·¥á·¥á·¥Ö ·¥Ä…¥ è  ú·¥á ü·¥ò, ·¥õ ú·¥á…¥ ·¥Ö·¥ç ·¥õ·¥è ·¥ç è ·¥è·¥°…¥·¥á Ä !"""

START_BTN =             [InlineKeyboardButton("…¢·¥á…¥·¥á Ä·¥Ä·¥õ·¥á s·¥õ Ä…™…¥…¢", callback_data="generate")],
                [
                    InlineKeyboardButton("s·¥ú·¥ò·¥ò·¥è Ä·¥õ", url="https://t.me/MASTIWITHFRIENDSXD"),
                    InlineKeyboardButton("·¥è·¥°…¥·¥á Ä", url="https://tg://user?id={OWNER_ID}")
                ],
                [InlineKeyboardButton("üìò …¢·¥ú…™·¥Ö·¥á", cack_data="guide")]
            ]

GUIDE_TXT ="""‚ú¶  ô·¥Äs…™·¥Ñ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös

‚ûª ·¥õ è·¥ò·¥á /gen ·¥è Ä ·¥õ·¥Ä·¥ò …¢·¥á…¥·¥á Ä·¥Ä·¥õ·¥á s·¥áss…™·¥è…¥ “ì·¥è Ä …¢·¥á…¥ s·¥áss…™·¥è…¥.

‚ûª ·¥õ è·¥ò·¥á /ping ·¥Ñ ú·¥á·¥Ñ·¥ã  ô·¥è·¥õ ·¥ú·¥ò·¥õ…™·¥ç·¥á
‚ûª ·¥õ è·¥ò·¥á /stats “ì·¥è Ä ·¥Ñ ú·¥á·¥Ñ·¥ã…™…¥…¢  ô·¥è·¥õ s·¥õ·¥Ä·¥õs

‚ûª ·¥õ è·¥ò·¥á /broadcast ·¥õ·¥è s·¥á…¥·¥Ö ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥õ·¥è ·¥Ä ü ü ·¥ús·¥á Äs + ·¥Ñ ú·¥Ä·¥õs (·¥è…¥ ü è ·¥è·¥°…¥·¥á Ä ·¥Ñ·¥Ä…¥ ·¥ús·¥á)

‚¶ø ·¥ä·¥è…™…¥ s·¥ú·¥ò·¥ò·¥è Ä·¥õ “ì·¥è Ä ·¥ç·¥è Ä·¥á ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás."""


def filter(cmd: str):
    return filters.private & filters.incoming & filters.command(cmd)

@Client.on_message(filter("start"))
async def start(bot: Client, msg: Message):
    me2 = (await bot.get_me()).mention
    await bot.send_photo(
        chat_id=msg.chat.id,
        photo=START_IMG,
        caption=START_TXT,
        reply_markup=InlineKeyboardMarkup(START_BTN),
    )

@Client.on_callback_query()
async def cb_handler(client: Client, query: CallbackQuery):
    data = query.data

    if data == "guide":
        await query.message.edit_text(
            text="""‚ú¶  ô·¥Äs…™·¥Ñ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös

‚ûª ·¥õ è·¥ò·¥á /gen ·¥è Ä ·¥õ·¥Ä·¥ò …¢·¥á…¥·¥á Ä·¥Ä·¥õ·¥á s·¥áss…™·¥è…¥ “ì·¥è Ä …¢·¥á…¥ s·¥áss…™·¥è…¥.

‚ûª ·¥õ è·¥ò·¥á /ping ·¥Ñ ú·¥á·¥Ñ·¥ã  ô·¥è·¥õ ·¥ú·¥ò·¥õ…™·¥ç·¥á
‚ûª ·¥õ è·¥ò·¥á /stats “ì·¥è Ä ·¥Ñ ú·¥á·¥Ñ·¥ã…™…¥…¢  ô·¥è·¥õ s·¥õ·¥Ä·¥õs

‚ûª ·¥õ è·¥ò·¥á /broadcast ·¥õ·¥è s·¥á…¥·¥Ö ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥õ·¥è ·¥Ä ü ü ·¥ús·¥á Äs + ·¥Ñ ú·¥Ä·¥õs (·¥è…¥ ü è ·¥è·¥°…¥·¥á Ä ·¥Ñ·¥Ä…¥ ·¥ús·¥á)

‚¶ø ·¥ä·¥è…™…¥ s·¥ú·¥ò·¥ò·¥è Ä·¥õ “ì·¥è Ä ·¥ç·¥è Ä·¥á ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás.""",
            reply_markup=InlineKeyboardMarkup(
                [[InlineKeyboardButton("‚¨ÖÔ∏è  ô·¥Ä·¥Ñ·¥ã", callback_data="start_menu")]]
            )
        )

    elif data == "start_menu":
        me2 = (await client.get_me()).mention
        await query.message.edit_caption(
            caption=START_TXT,
            reply_markup=InlineKeyboardMarkup(START_BTN)
        )
